{"ast":null,"code":"var _jsxFileName = \"/Users/youngjikim/workspace-directory/react_project-directory/nomflix-react-projext/src/Routes/Detail/DetailPresenter.js\";\n// import React from \"react\";\n// import PropTypes from \"prop-types\"\n// import styled from \"styled-components\"\n// import Loader from \"../../Components/Loader\";\n//\n// const Container = styled.div`\n//   height: calc(100vh- 50px);\n//   width: 100%;\n//   position: absolute;\n//   `;\n//\n// const Backdrop = styled.div`\n//   position:relative;\n//   top:0;\n//   left:0;\n//   width:100%;\n//   height:100%;\n//   background-image: url(${props => props.bgImage});\n//   background-position: center center;\n//   background-size:cover;\n//   `;\n//\n// const DetailPresenter = ({result, error, loading}) =>\n//   loading ? <Loader/> : (\n//   <Container>\n//     <Backdrop\n//       bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n//     />\n//   </Container>\n//   );\n//\n// DetailPresenter.propTypes = {\n//   result: PropTypes.object,\n//   error: PropTypes.string,\n//   loading: PropTypes.bool.isRequired\n// };\n//\n// export default DetailPresenter;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\nconst Title = styled.h3`\n  font-size: 32px;\n`;\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\nconst Item = styled.span``;\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({\n  result,\n  loading,\n  error\n}) => loading ? React.createElement(React.Fragment, null, React.createElement(Helmet, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114\n  },\n  __self: this\n}, React.createElement(\"title\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 115\n  },\n  __self: this\n}, \"Loading | Nomflix\")), React.createElement(Loader, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117\n  },\n  __self: this\n})) : React.createElement(Container, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 120\n  },\n  __self: this\n}, React.createElement(Helmet, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 121\n  },\n  __self: this\n}, React.createElement(\"title\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 122\n  },\n  __self: this\n}, result.original_title ? result.original_title : result.original_name, \" \", \"| Nomflix\")), React.createElement(Backdrop, {\n  bgImage: `https://image.tmdb.org/t/p/original${result.backdrop_path}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 127\n  },\n  __self: this\n}), React.createElement(Content, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 130\n  },\n  __self: this\n}, React.createElement(Cover, {\n  bgImage: result.poster_path ? `https://image.tmdb.org/t/p/original${result.poster_path}` : require(\"../../assets/noPosterSmall.png\"),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 131\n  },\n  __self: this\n}), React.createElement(Data, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 138\n  },\n  __self: this\n}, React.createElement(Title, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 139\n  },\n  __self: this\n}, result.original_title ? result.original_title : result.original_name), React.createElement(ItemContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 144\n  },\n  __self: this\n}, React.createElement(Item, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 145\n  },\n  __self: this\n}, result.release_date ? result.release_date.substring(0, 4) : result.first_air_date.substring(0, 4)), React.createElement(Divider, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 150\n  },\n  __self: this\n}, \"\\u2022\"), React.createElement(Item, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 151\n  },\n  __self: this\n}, result.runtime ? result.runtime : result.episode_run_time[0], \" min\"), React.createElement(Divider, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 154\n  },\n  __self: this\n}, \"\\u2022\"), React.createElement(Item, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 155\n  },\n  __self: this\n}, result.genres && result.genres.map((genre, index) => index === result.genres.length - 1 ? genre.name : `${genre.name} / `))), React.createElement(Overview, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 164\n  },\n  __self: this\n}, result.overview))));\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\nexport default DetailPresenter;","map":{"version":3,"sources":["/Users/youngjikim/workspace-directory/react_project-directory/nomflix-react-projext/src/Routes/Detail/DetailPresenter.js"],"names":["React","PropTypes","styled","Helmet","Loader","Container","div","Backdrop","props","bgImage","Content","Cover","Data","Title","h3","ItemContainer","Item","span","Divider","Overview","p","DetailPresenter","result","loading","error","original_title","original_name","backdrop_path","poster_path","require","release_date","substring","first_air_date","runtime","episode_run_time","genres","map","genre","index","length","name","overview","propTypes","object","bool","isRequired","string"],"mappings":"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","sourcesContent":["// import React from \"react\";\n// import PropTypes from \"prop-types\"\n// import styled from \"styled-components\"\n// import Loader from \"../../Components/Loader\";\n//\n// const Container = styled.div`\n//   height: calc(100vh- 50px);\n//   width: 100%;\n//   position: absolute;\n//   `;\n//\n// const Backdrop = styled.div`\n//   position:relative;\n//   top:0;\n//   left:0;\n//   width:100%;\n//   height:100%;\n//   background-image: url(${props => props.bgImage});\n//   background-position: center center;\n//   background-size:cover;\n//   `;\n//\n// const DetailPresenter = ({result, error, loading}) =>\n//   loading ? <Loader/> : (\n//   <Container>\n//     <Backdrop\n//       bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n//     />\n//   </Container>\n//   );\n//\n// DetailPresenter.propTypes = {\n//   result: PropTypes.object,\n//   error: PropTypes.string,\n//   loading: PropTypes.bool.isRequired\n// };\n//\n// export default DetailPresenter;\n\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n              result.genres.map((genre, index) =>\n                index === result.genres.length - 1\n                  ? genre.name\n                  : `${genre.name} / `\n              )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default DetailPresenter;"]},"metadata":{},"sourceType":"module"}