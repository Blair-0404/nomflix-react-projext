{"ast":null,"code":"// import axios from \"axios\";\n//\n// const api = axios.create({\n//   baseURL: \"https://api.themoviedb.org/3/\",\n//   headers: {\n//     \"Access-Control-Allow-Origin\": \"*\",\n//     \"request_token\": \"6bc047b88f669d1fb86574f06381005d93d3517a\"\n//   },\n//   params: {\n//     api_key: \"10923b261ba94d897ac6b81148314a3f\",\n//     language: \"en-US\"\n//   }\n// });\n// export const moviesApi = {\n//   nowPlaying: () => api.get(\"movie/now_playing\"),\n//   upcoming: () => api.get(\"movie/upcoming\"),\n//   popular: () => api.get(\"movie/popular\"),\n//   movieDetail: id => api.get(`movie/${id}`, {\n//     params: {\n//       append_to_response: \"videos\"\n//     }\n//   }),\n//   search: term =>\n//     api.get(\"search/movie\", {\n//       params: {\n//         query: encodeURIComponent(term)\n//       }\n//     })\n// };\n//\n// export const tvApi = {\n//   topRated: () => api.get(\"tv/top_rated\"),\n//   popular: () => api.get(\"tv/popular\"),\n//   airingToday: () => api.get(\"tv/airing_today\"),\n//   shoeDetail: (id) => api.get(`tv/${id}`, {\n//     params: {\n//       append_to_response: \"videos\"\n//     }\n//   }),\n//   search: term =>\n//     api.get(\"search/tv\", {\n//       params: {\n//         query: encodeURIComponent(term)\n//       }\n//     })\n// };\nimport axios from \"axios\";\nconst base_url = 'https://api.themoviedb.org/3';\nconst api_key = '44ebf9cf927b173d893cd89ea3db2e1e';\nexport const moviesApi = {\n  nowPlaying: () => axios.get(`${base_url}/movie/now_playing?api_key=${api_key}`),\n  upcoming: () => axios.get(`${base_url}/movie/upcoming?api_key${api_key}`),\n  popular: () => axios.get(\"movie/popular\"),\n  movieDetail: id => axios.get(`movie/${id}`, {\n    params: {\n      append_to_response: \"videos\"\n    }\n  }),\n  search: term => axios.get(\"search/movie\", {\n    params: {\n      query: encodeURIComponent(term)\n    }\n  })\n};\nexport const tvApi = {\n  topRated: () => axios.get(\"tv/top_rated\"),\n  popular: () => axios.get(\"tv/popular\"),\n  airingToday: () => axios.get(\"tv/airing_today\"),\n  shoeDetail: id => axios.get(`tv/${id}`, {\n    params: {\n      append_to_response: \"videos\"\n    }\n  }),\n  search: term => axios.get(\"search/tv\", {\n    params: {\n      query: encodeURIComponent(term)\n    }\n  })\n};","map":{"version":3,"sources":["/Users/youngjikim/workspace/react_project/nomflix-react-projext/src/api.js"],"names":["axios","base_url","api_key","moviesApi","nowPlaying","get","upcoming","popular","movieDetail","id","params","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","shoeDetail"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAG,8BAAjB;AACA,MAAMC,OAAO,GAAG,kCAAhB;AAEA,OAAO,MAAMC,SAAS,GAAG;AACvBC,EAAAA,UAAU,EAAE,MAAMJ,KAAK,CAACK,GAAN,CAAW,GAAEJ,QAAS,8BAA6BC,OAAQ,EAA3D,CADK;AAEvBI,EAAAA,QAAQ,EAAE,MAAMN,KAAK,CAACK,GAAN,CAAW,GAAEJ,QAAS,0BAAyBC,OAAQ,EAAvD,CAFO;AAGvBK,EAAAA,OAAO,EAAE,MAAMP,KAAK,CAACK,GAAN,CAAU,eAAV,CAHQ;AAIvBG,EAAAA,WAAW,EAAEC,EAAE,IAAIT,KAAK,CAACK,GAAN,CAAW,SAAQI,EAAG,EAAtB,EAAyB;AAC1CC,IAAAA,MAAM,EAAE;AACNC,MAAAA,kBAAkB,EAAE;AADd;AADkC,GAAzB,CAJI;AASvBC,EAAAA,MAAM,EAAEC,IAAI,IACVb,KAAK,CAACK,GAAN,CAAU,cAAV,EAA0B;AACxBK,IAAAA,MAAM,EAAE;AACNI,MAAAA,KAAK,EAAEC,kBAAkB,CAACF,IAAD;AADnB;AADgB,GAA1B;AAVqB,CAAlB;AAiBP,OAAO,MAAMG,KAAK,GAAG;AACnBC,EAAAA,QAAQ,EAAE,MAAMjB,KAAK,CAACK,GAAN,CAAU,cAAV,CADG;AAEnBE,EAAAA,OAAO,EAAE,MAAMP,KAAK,CAACK,GAAN,CAAU,YAAV,CAFI;AAGnBa,EAAAA,WAAW,EAAE,MAAMlB,KAAK,CAACK,GAAN,CAAU,iBAAV,CAHA;AAInBc,EAAAA,UAAU,EAAGV,EAAD,IAAQT,KAAK,CAACK,GAAN,CAAW,MAAKI,EAAG,EAAnB,EAAsB;AACxCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,kBAAkB,EAAE;AADd;AADgC,GAAtB,CAJD;AASnBC,EAAAA,MAAM,EAAEC,IAAI,IACVb,KAAK,CAACK,GAAN,CAAU,WAAV,EAAuB;AACrBK,IAAAA,MAAM,EAAE;AACNI,MAAAA,KAAK,EAAEC,kBAAkB,CAACF,IAAD;AADnB;AADa,GAAvB;AAViB,CAAd","sourcesContent":["// import axios from \"axios\";\n//\n// const api = axios.create({\n//   baseURL: \"https://api.themoviedb.org/3/\",\n//   headers: {\n//     \"Access-Control-Allow-Origin\": \"*\",\n//     \"request_token\": \"6bc047b88f669d1fb86574f06381005d93d3517a\"\n//   },\n//   params: {\n//     api_key: \"10923b261ba94d897ac6b81148314a3f\",\n//     language: \"en-US\"\n//   }\n// });\n\n\n\n\n\n// export const moviesApi = {\n//   nowPlaying: () => api.get(\"movie/now_playing\"),\n//   upcoming: () => api.get(\"movie/upcoming\"),\n//   popular: () => api.get(\"movie/popular\"),\n//   movieDetail: id => api.get(`movie/${id}`, {\n//     params: {\n//       append_to_response: \"videos\"\n//     }\n//   }),\n//   search: term =>\n//     api.get(\"search/movie\", {\n//       params: {\n//         query: encodeURIComponent(term)\n//       }\n//     })\n// };\n//\n// export const tvApi = {\n//   topRated: () => api.get(\"tv/top_rated\"),\n//   popular: () => api.get(\"tv/popular\"),\n//   airingToday: () => api.get(\"tv/airing_today\"),\n//   shoeDetail: (id) => api.get(`tv/${id}`, {\n//     params: {\n//       append_to_response: \"videos\"\n//     }\n//   }),\n//   search: term =>\n//     api.get(\"search/tv\", {\n//       params: {\n//         query: encodeURIComponent(term)\n//       }\n//     })\n// };\n\nimport axios from \"axios\";\n\nconst base_url = 'https://api.themoviedb.org/3';\nconst api_key = '44ebf9cf927b173d893cd89ea3db2e1e';\n\nexport const moviesApi = {\n  nowPlaying: () => axios.get(`${base_url}/movie/now_playing?api_key=${api_key}`),\n  upcoming: () => axios.get(`${base_url}/movie/upcoming?api_key${api_key}`),\n  popular: () => axios.get(\"movie/popular\"),\n  movieDetail: id => axios.get(`movie/${id}`, {\n    params: {\n      append_to_response: \"videos\"\n    }\n  }),\n  search: term =>\n    axios.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n\nexport const tvApi = {\n  topRated: () => axios.get(\"tv/top_rated\"),\n  popular: () => axios.get(\"tv/popular\"),\n  airingToday: () => axios.get(\"tv/airing_today\"),\n  shoeDetail: (id) => axios.get(`tv/${id}`, {\n    params: {\n      append_to_response: \"videos\"\n    }\n  }),\n  search: term =>\n    axios.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};"]},"metadata":{},"sourceType":"module"}