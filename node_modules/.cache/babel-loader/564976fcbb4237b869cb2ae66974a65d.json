{"ast":null,"code":"import _regeneratorRuntime from\"/Users/youngjikim/workspace-directory/react_project-directory/nomflix-react-projext/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/youngjikim/workspace-directory/react_project-directory/nomflix-react-projext/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/youngjikim/workspace-directory/react_project-directory/nomflix-react-projext/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/youngjikim/workspace-directory/react_project-directory/nomflix-react-projext/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/youngjikim/workspace-directory/react_project-directory/nomflix-react-projext/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/youngjikim/workspace-directory/react_project-directory/nomflix-react-projext/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/youngjikim/workspace-directory/react_project-directory/nomflix-react-projext/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import HomePresenter from\"./HomePresenter\";import{moviesApi}from\"../../api\";var _default=/*#__PURE__*/function(_React$Component){_inherits(_default,_React$Component);function _default(){var _getPrototypeOf2;var _this;_classCallCheck(this,_default);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(_default)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={nowPlaying:null,upcoming:null,popular:null,error:null,loading:true};return _this;}_createClass(_default,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _ref,nowPlaying,_ref2,upcoming,_ref3,popular;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return moviesApi.nowPlaying();case 3:_ref=_context.sent;nowPlaying=_ref.data.results;_context.next=7;return moviesApi.upcoming();case 7:_ref2=_context.sent;upcoming=_ref2.data.results;_context.next=11;return moviesApi.popular();case 11:_ref3=_context.sent;popular=_ref3.data.results;// throw Error(); // 만약이렇게 중간에 에러가 발생하면 .catch를 타게된다.\nthis.setState({nowPlaying:nowPlaying,// 같으면 한번만써도된다.\nupcoming:upcoming,popular:popular});_context.next=19;break;case 16:_context.prev=16;_context.t0=_context[\"catch\"](0);this.setState({error:\"Can't find Movies information.\"});case 19:_context.prev=19;// finally는 무조건 결과가 끝나면 실행된다.\nthis.setState({loading:false});return _context.finish(19);case 22:case\"end\":return _context.stop();}}},_callee,this,[[0,16,19,22]]);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"render\",value:function render(){var _this$state=this.state,nowPlaying=_this$state.nowPlaying,upcoming=_this$state.upcoming,popular=_this$state.popular,error=_this$state.error,loading=_this$state.loading;// console.log(this.state)\nreturn React.createElement(HomePresenter,{nowPlaying:nowPlaying,upcoming:upcoming,popular:popular,error:error,loading:loading});}}]);return _default;}(React.Component);export{_default as default};","map":{"version":3,"sources":["/Users/youngjikim/workspace-directory/react_project-directory/nomflix-react-projext/src/Routes/Home/HomeContainer.js"],"names":["React","HomePresenter","moviesApi","state","nowPlaying","upcoming","popular","error","loading","data","results","setState","Component"],"mappings":"i5CAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,OAAQC,SAAR,KAAwB,WAAxB,C,+ZAGEC,K,CAAQ,CACNC,UAAU,CAAE,IADN,CAENC,QAAQ,CAAE,IAFJ,CAGNC,OAAO,CAAE,IAHH,CAINC,KAAK,CAAE,IAJD,CAKNC,OAAO,CAAE,IALH,C,yXAU0CN,CAAAA,SAAS,CAACE,UAAV,E,2BAAtBA,U,MAAjBK,I,CAAQC,O,uBAK6BR,CAAAA,SAAS,CAACG,QAAV,E,4BAApBA,Q,OAAjBI,I,CAAQC,O,wBAC4BR,CAAAA,SAAS,CAACI,OAAV,E,6BAAnBA,O,OAAjBG,I,CAAQC,O,CACf;AACA,KAAKC,QAAL,CAAc,CACZP,UAAU,CAACA,UADC,CACW;AACvBC,QAAQ,CAARA,QAFY,CAGZC,OAAO,CAAPA,OAHY,CAAd,E,iFAMA,KAAKK,QAAL,CAAc,CACZJ,KAAK,CAAE,gCADK,CAAd,E,yBAGU;AACV,KAAKI,QAAL,CAAc,CACZH,OAAO,CAAE,KADG,CAAd,E,0PAMK,iBACiD,KAAKL,KADtD,CACAC,UADA,aACAA,UADA,CACYC,QADZ,aACYA,QADZ,CACsBC,OADtB,aACsBA,OADtB,CAC+BC,KAD/B,aAC+BA,KAD/B,CACsCC,OADtC,aACsCA,OADtC,CAEP;AACA,MACE,qBAAC,aAAD,EACE,UAAU,CAAEJ,UADd,CAEE,QAAQ,CAAEC,QAFZ,CAGE,OAAO,CAAEC,OAHX,CAIE,KAAK,CAAEC,KAJT,CAKE,OAAO,CAAEC,OALX,EADF,CASD,C,sBA/C0BR,KAAK,CAACY,S","sourcesContent":["import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport {moviesApi} from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {data: { results: nowPlaying }} = await moviesApi.nowPlaying(); // 비구조 할당으로 꺼내서 다시 이름지정해서 불러오기\n      //awiat뒤가 끝나기 전에는 다른것을 진행하지 말아달라는 의미(여기서 끝났다는것과 성공했다는것은 다르다.)\n      // 실패할수도있고 성공할수도있는데 일단은 기다려주는것이다.\n      // 자바스크립트는 나를 기다려주지않는다. 하지만 async/awiat은 기다려준다(일이끝나기를기다려준다는 의미)\n      // console.log(nowPlaying)\n      const {data: { results: upcoming }} = await moviesApi.upcoming();\n      const {data: { results: popular }} = await moviesApi.popular();\n      // throw Error(); // 만약이렇게 중간에 에러가 발생하면 .catch를 타게된다.\n      this.setState({\n        nowPlaying:nowPlaying, // 같으면 한번만써도된다.\n        upcoming,\n        popular\n      })\n    } catch {\n      this.setState({\n        error: \"Can't find Movies information.\"\n      });\n    } finally { // finally는 무조건 결과가 끝나면 실행된다.\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const {nowPlaying, upcoming, popular, error, loading} = this.state;\n    // console.log(this.state)\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}