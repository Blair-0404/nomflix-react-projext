{"ast":null,"code":"var _jsxFileName = \"/Users/youngjikim/workspace-directory/react_project-directory/nomflix-react-projext/src/Routes/Search/SearchPresenter.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport Massage from \"../../Components/Massage\";\nimport Poster from \"../../Components/Poster\";\nimport { Helmet } from \"react-helmet\";\nconst Container = styled.div`\n  padding:0px 20px\n  `;\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width:100%;\n  `;\nconst Input = styled.input`\n  all:unset; \n  font-size:28px;\n  width:100%;\n  `;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  error,\n  loading,\n  handleSubmit,\n  updateTerm\n}) => React.createElement(Container, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, React.createElement(Helmet, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, React.createElement(\"title\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, \"Search | Nomflix\")), React.createElement(Form, {\n  onSubmit: handleSubmit,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, React.createElement(Input, {\n  placeholder: \"Search Movies od TV Shows....\",\n  value: searchTerm,\n  onChange: updateTerm,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n})), loading ? React.createElement(Loader, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}) : React.createElement(React.Fragment, null, movieResults && movieResults.length > 0 && React.createElement(Section, {\n  title: \"Movie Results\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, movieResults.map(movie => React.createElement(Poster, {\n  key: movie.id,\n  id: movie.id,\n  title: movie.original_title,\n  rating: movie.vote_average,\n  imageUrl: movie.poster_path,\n  isMovie: true,\n  year: movie.release_date && movie.release_date.substring(0, 4),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}))), tvResults && tvResults.length > 0 && React.createElement(Section, {\n  title: \"TV Show Results\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, tvResults.map(show => React.createElement(\"span\", {\n  key: show.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}, show.name)))), error && React.createElement(Massage, {\n  color: \"#e74c3c\",\n  text: error,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}), tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && React.createElement(Massage, {\n  color: \"#7f8c8d\",\n  text: \"Nothing found\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}));\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\nexport default SearchPresenter;","map":{"version":3,"sources":["/Users/youngjikim/workspace-directory/react_project-directory/nomflix-react-projext/src/Routes/Search/SearchPresenter.js"],"names":["React","PropTypes","styled","Loader","Section","Massage","Poster","Helmet","Container","div","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","error","loading","handleSubmit","updateTerm","length","map","movie","id","original_title","vote_average","poster_path","release_date","substring","show","name","propTypes","array","string","bool","isRequired","func"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport Massage from \"../../Components/Massage\";\nimport Poster from \"../../Components/Poster\";\nimport {Helmet} from \"react-helmet\";\n\nconst Container = styled.div`\n  padding:0px 20px\n  `;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width:100%;\n  `;\n\nconst Input = styled.input`\n  all:unset; \n  font-size:28px;\n  width:100%;\n  `;\n\nconst SearchPresenter = ({movieResults,\n                           tvResults,\n                           searchTerm,\n                           error,\n                           loading,\n                           handleSubmit,\n                           updateTerm}) =>\n  <Container>\n      <Helmet>\n        <title>Search | Nomflix</title>\n      </Helmet>\n  <Form onSubmit={handleSubmit}>\n    <Input placeholder=\"Search Movies od TV Shows....\" value={searchTerm} onChange={updateTerm}/>\n  </Form>\n  {loading ? <Loader/> : <>\n    {movieResults && movieResults.length > 0 && (\n      <Section title=\"Movie Results\">\n        {movieResults.map(movie => (\n          <Poster key={movie.id}\n                  id={movie.id}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  imageUrl={movie.poster_path}\n                  isMovie={true}\n                  year={movie.release_date && movie.release_date.substring(0,4)}\n          />        ))}\n      </Section>\n    )}\n\n    {tvResults && tvResults.length > 0 && (\n      <Section title=\"TV Show Results\">\n        {tvResults.map(show => (\n          <span key={show.id}>{show.name}</span>\n        ))}\n      </Section>\n    )}\n  </>}\n    {error && <Massage color=\"#e74c3c\" text={error}/>}\n    {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && (\n      <Massage color=\"#7f8c8d\" text=\"Nothing found\"/>\n      )}\n  </Container>;\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;"]},"metadata":{},"sourceType":"module"}