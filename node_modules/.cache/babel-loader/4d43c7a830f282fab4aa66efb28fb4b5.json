{"ast":null,"code":"var _jsxFileName = \"/Users/youngjikim/workspace-directory/react_project-directory/nomflix-react-projext/src/Routes/Search/SearchPresenter.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nconst Container = styled.div`\n  padding:0px 20px\n  `;\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width:100%;\n  `;\nconst Input = styled.input`\n  all:unset; \n  font-size:28px;\n  width:100%;\n  `;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  error,\n  loading,\n  handleSubmit,\n  updateTerm\n}) => React.createElement(Container, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, React.createElement(Form, {\n  onSubmit: handleSubmit,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, React.createElement(Input, {\n  placeholder: \"Search Movies od TV Shows....\",\n  value: searchTerm,\n  onChange: updateTerm,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n})), loading ? React.createElement(Loader, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}) : React.createElement(React.Fragment, null, movieResults && movieResults.length > 0 && React.createElement(Section, {\n  title: \"Movie Results\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, movieResults.map(movie => React.createElement(\"span\", {\n  key: movie.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, movie.title)))));\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\nexport default SearchPresenter;","map":{"version":3,"sources":["/Users/youngjikim/workspace-directory/react_project-directory/nomflix-react-projext/src/Routes/Search/SearchPresenter.js"],"names":["React","PropTypes","styled","Loader","Section","Container","div","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","error","loading","handleSubmit","updateTerm","length","map","movie","id","title","propTypes","array","string","bool","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAI;;GAA7B;AAIA,MAAMC,IAAI,GAAGL,MAAM,CAACM,IAAK;;;GAAzB;AAKA,MAAMC,KAAK,GAAGP,MAAM,CAACQ,KAAM;;;;GAA3B;;AAMA,MAAMC,eAAe,GAAG,CAAC;AACEC,EAAAA,YADF;AAEEC,EAAAA,SAFF;AAGEC,EAAAA,UAHF;AAIEC,EAAAA,KAJF;AAKEC,EAAAA,OALF;AAMEC,EAAAA,YANF;AAOEC,EAAAA;AAPF,CAAD,KAStB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA,oBAAC,IAAD;AAAM,EAAA,QAAQ,EAAED,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,KAAD;AAAO,EAAA,WAAW,EAAC,+BAAnB;AAAmD,EAAA,KAAK,EAAEH,UAA1D;AAAsE,EAAA,QAAQ,EAAEI,UAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADA,EAICF,OAAO,GAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAH,GAAe,0CACpBJ,YAAY,IAAIA,YAAY,CAACO,MAAb,GAAsB,CAAtC,IACC,oBAAC,OAAD;AAAS,EAAA,KAAK,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGP,YAAY,CAACQ,GAAb,CAAiBC,KAAK,IACrB;AAAM,EAAA,GAAG,EAAEA,KAAK,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAsBD,KAAK,CAACE,KAA5B,CADD,CADH,CAFmB,CAJvB,CATF;;AAwBAZ,eAAe,CAACa,SAAhB,GAA4B;AAC1BZ,EAAAA,YAAY,EAAEX,SAAS,CAACwB,KADE;AAE1BZ,EAAAA,SAAS,EAAEZ,SAAS,CAACwB,KAFK;AAG1BX,EAAAA,UAAU,EAAEb,SAAS,CAACyB,MAHI;AAI1BX,EAAAA,KAAK,EAAEd,SAAS,CAACyB,MAJS;AAK1BV,EAAAA,OAAO,EAAEf,SAAS,CAAC0B,IAAV,CAAeC,UALE;AAM1BX,EAAAA,YAAY,EAAEhB,SAAS,CAAC4B,IAAV,CAAeD,UANH;AAO1BV,EAAAA,UAAU,EAAEjB,SAAS,CAAC4B,IAAV,CAAeD;AAPD,CAA5B;AAUA,eAAejB,eAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\n\nconst Container = styled.div`\n  padding:0px 20px\n  `;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width:100%;\n  `;\n\nconst Input = styled.input`\n  all:unset; \n  font-size:28px;\n  width:100%;\n  `;\n\nconst SearchPresenter = ({\n                           movieResults,\n                           tvResults,\n                           searchTerm,\n                           error,\n                           loading,\n                           handleSubmit,\n                           updateTerm\n                         }) =>\n  <Container>\n  <Form onSubmit={handleSubmit}>\n    <Input placeholder=\"Search Movies od TV Shows....\" value={searchTerm} onChange={updateTerm}/>\n  </Form>\n  {loading ? <Loader/> : <>\n    {movieResults && movieResults.length > 0 && (\n      <Section title=\"Movie Results\">\n        {movieResults.map(movie => (\n          <span key={movie.id}>{movie.title}</span>\n        ))}\n      </Section>\n    )}\n  </>}\n</Container>;\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;"]},"metadata":{},"sourceType":"module"}