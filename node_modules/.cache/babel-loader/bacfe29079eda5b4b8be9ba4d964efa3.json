{"ast":null,"code":"var _jsxFileName = \"/Users/youngjikim/workspace/react_project/nomflix-react-projext/src/Routes/Detail/DetailContainer.js\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: {\n        pathname\n      }\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: {\n          id\n        }\n      },\n      history: {\n        push\n      },\n      location: {\n        pathname\n      }\n    } = this.props;\n    const {\n      isMovie\n    } = thi.state;\n    const parsedId = parseInt(id);\n\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n\n    let result = null;\n\n    try {\n      if (isMovie) {\n        result = await moviesApi.movieDetail(parsedId);\n      } else {\n        result = await tvApi.showDetail(parsedId);\n      }\n    } catch {\n      this.setState({\n        error: \"Can't find anything.\"\n      });\n    } finally {\n      this.setState({\n        loading: false,\n        result\n      });\n    }\n  }\n\n  render() {\n    const {\n      result,\n      error,\n      loading\n    } = this.state;\n    console.log(this.state);\n    return React.createElement(DetailPresenter, {\n      result: result,\n      error: error,\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/youngjikim/workspace/react_project/nomflix-react-projext/src/Routes/Detail/DetailContainer.js"],"names":["React","DetailPresenter","moviesApi","tvApi","Component","constructor","props","location","pathname","state","result","error","loading","isMovie","includes","componentDidMount","match","params","id","history","push","thi","parsedId","parseInt","isNaN","movieDetail","showDetail","setState","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAAQC,SAAR,EAAmBC,KAAnB,QAA+B,WAA/B;AAEA,eAAe,cAAcH,KAAK,CAACI,SAApB,CAA8B;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,UAAM;AAACC,MAAAA,QAAQ,EAAE;AAACC,QAAAA;AAAD;AAAX,QAAyBF,KAA/B;AAEA,SAAKG,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,IADG;AAEXC,MAAAA,KAAK,EAAE,IAFI;AAGXC,MAAAA,OAAO,EAAE,IAHE;AAIXC,MAAAA,OAAO,EAAGL,QAAQ,CAACM,QAAT,CAAkB,SAAlB;AAJC,KAAb;AAMD;;AAGD,QAAMC,iBAAN,GAA0B;AACxB,UAAM;AAACC,MAAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAACC,UAAAA;AAAD;AAAT,OAAR;AAAwBC,MAAAA,OAAO,EAAE;AAACC,QAAAA;AAAD,OAAjC;AAAyCb,MAAAA,QAAQ,EAAE;AAACC,QAAAA;AAAD;AAAnD,QAAiE,KAAKF,KAA5E;AACA,UAAM;AAACO,MAAAA;AAAD,QAAYQ,GAAG,CAACZ,KAAtB;AACA,UAAMa,QAAQ,GAAGC,QAAQ,CAACL,EAAD,CAAzB;;AACA,QAAIM,KAAK,CAACF,QAAD,CAAT,EAAqB;AACnB,aAAOF,IAAI,CAAC,GAAD,CAAX;AACD;;AACD,QAAIV,MAAM,GAAG,IAAb;;AACA,QAAG;AACD,UAAGG,OAAH,EAAY;AACVH,QAAAA,MAAM,GAAG,MAAMR,SAAS,CAACuB,WAAV,CAAsBH,QAAtB,CAAf;AACD,OAFD,MAEO;AACLZ,QAAAA,MAAM,GAAG,MAAMP,KAAK,CAACuB,UAAN,CAAiBJ,QAAjB,CAAf;AACD;AACF,KAND,CAME,MAAM;AACN,WAAKK,QAAL,CAAc;AAAChB,QAAAA,KAAK,EAAC;AAAP,OAAd;AACD,KARD,SAQU;AACR,WAAKgB,QAAL,CAAc;AAACf,QAAAA,OAAO,EAAC,KAAT;AAAgBF,QAAAA;AAAhB,OAAd;AACD;AACF;;AAEDkB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAClB,MAAAA,MAAD;AAASC,MAAAA,KAAT;AAAgBC,MAAAA;AAAhB,QAA2B,KAAKH,KAAtC;AACAoB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAjB;AAEA,WACE,oBAAC,eAAD;AACE,MAAA,MAAM,EAAEC,MADV;AAEE,MAAA,KAAK,EAAEC,KAFT;AAGE,MAAA,OAAO,EAAEC,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AA9C0C","sourcesContent":["import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport {moviesApi, tvApi} from \"../../api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {location: {pathname}} = props;\n\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie : pathname.includes(\"/movie/\")\n  };\n  }\n\n\n  async componentDidMount() {\n    const {match: {params: {id}}, history: {push}, location: {pathname}} = this.props;\n    const {isMovie} = thi.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try{\n      if(isMovie) {\n        result = await moviesApi.movieDetail(parsedId);\n      } else {\n        result = await tvApi.showDetail(parsedId);\n      }\n    } catch {\n      this.setState({error:\"Can't find anything.\"});\n    } finally {\n      this.setState({loading:false, result});\n    }\n  }\n\n  render() {\n    const {result, error, loading} = this.state;\n    console.log(this.state)\n\n    return (\n      <DetailPresenter\n        result={result}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}