{"ast":null,"code":"var _jsxFileName = \"/Users/youngjikim/workspace-directory/react_project-directory/nomflix-react-projext/src/Routes/TV/TVPresenter.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Massage from \"../../Components/Massage\";\nimport Poster from \"../../Components/Poster\";\nimport { Helmet } from \"react-helmet\";\nconst Container = styled.div`\n  padding:20px\n\n  `;\n\nconst TVPresenter = ({\n  topRated,\n  popular,\n  airingToday,\n  error,\n  loading\n}) => React.createElement(React.Fragment, null, React.createElement(Helmet, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(\"title\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, \"Movies | Nomflix\")), \"loading ? \", React.createElement(Loader, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}), \" :\", React.createElement(Container, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, topRated && topRated.length > 0 && React.createElement(Section, {\n  title: \"Top Rated Shows\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, topRated.map(show => React.createElement(Poster, {\n  key: show.id,\n  id: show.id,\n  title: show.original_name,\n  rating: show.vote_average,\n  imageUrl: show.poster_path,\n  year: show.first_air_date && show.first_air_date.substring(0, 4),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}))), popular && popular.length > 0 && React.createElement(Section, {\n  title: \"Popular Shows\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, popular.map(show => React.createElement(Poster, {\n  key: show.id,\n  id: show.id,\n  title: show.original_name,\n  rating: show.vote_average,\n  imageUrl: show.poster_path,\n  year: show.first_air_date && show.first_air_date.substring(0, 4),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n})), \"    \"), airingToday && airingToday.length > 0 && React.createElement(Section, {\n  title: \"Airing Today\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}, airingToday.map(show => React.createElement(Poster, {\n  key: show.id,\n  id: show.id,\n  title: show.original_name,\n  rating: show.vote_average,\n  imageUrl: show.poster_path,\n  year: show.first_air_date && show.first_air_date.substring(0, 4),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n})), \"    \"), error && React.createElement(Massage, {\n  color: \"#e74c3c\",\n  text: error,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n})));\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\nexport default TVPresenter;","map":{"version":3,"sources":["/Users/youngjikim/workspace-directory/react_project-directory/nomflix-react-projext/src/Routes/TV/TVPresenter.js"],"names":["React","PropTypes","styled","Section","Loader","Massage","Poster","Helmet","Container","div","TVPresenter","topRated","popular","airingToday","error","loading","length","map","show","id","original_name","vote_average","poster_path","first_air_date","substring","propTypes","array","string","bool","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Massage from \"../../Components/Massage\";\nimport Poster from \"../../Components/Poster\";\nimport {Helmet} from \"react-helmet\";\n\nconst Container = styled.div`\n  padding:20px\n\n  `;\n\nconst TVPresenter = ({topRated, popular, airingToday, error, loading}) =>\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n  loading ? <Loader/> :\n  <Container>\n\n    {topRated && topRated.length > 0 &&\n    <Section title=\"Top Rated Shows\">\n      {topRated.map(show =>\n        <Poster key={show.id}\n                id={show.id}\n                title={show.original_name}\n                rating={show.vote_average}\n                imageUrl={show.poster_path}\n                year={show.first_air_date && show.first_air_date.substring(0,4)}\n        />      )}\n    </Section>}\n\n    {popular && popular.length > 0 &&\n    <Section title=\"Popular Shows\">\n      {popular.map(show =>\n        <Poster key={show.id}\n                id={show.id}\n                title={show.original_name}\n                rating={show.vote_average}\n                imageUrl={show.poster_path}\n                year={show.first_air_date && show.first_air_date.substring(0,4)}\n        />      )}    </Section>}\n\n    {airingToday && airingToday.length > 0 &&\n    <Section title=\"Airing Today\">\n      {airingToday.map(show =>\n        <Poster key={show.id}\n                id={show.id}\n                title={show.original_name}\n                rating={show.vote_average}\n                imageUrl={show.poster_path}\n                year={show.first_air_date && show.first_air_date.substring(0,4)}\n        />      )}    </Section>}\n    {error && <Massage color=\"#e74c3c\" text={error}/>}\n\n  </Container>\n    </>;\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default TVPresenter;"]},"metadata":{},"sourceType":"module"}