{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/youngjikim/workspace-directory/react_project-directory/nomflix-react-projext/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  all:unset; \\n  font-size:28px;\\n  width:100%;\\n  \"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  margin-bottom: 50px;\\n  width:100%;\\n  \"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  padding:0px 20px\\n  \"]);_templateObject=function _templateObject(){return data;};return data;}import React from\"react\";import styled from\"styled-components\";import Loader from\"../../Components/Loader\";import Section from\"../../Components/Section\";import Massage from\"../../Components/Massage\";import Poster from\"../../Components/Poster\";import{Helmet}from\"react-helmet\";var Container=styled.div(_templateObject());var Form=styled.form(_templateObject2());var Input=styled.input(_templateObject3());var SearchPresenter=function SearchPresenter(_ref){var movieResults=_ref.movieResults,tvResults=_ref.tvResults,searchTerm=_ref.searchTerm,error=_ref.error,loading=_ref.loading,handleSubmit=_ref.handleSubmit,updateTerm=_ref.updateTerm;return React.createElement(Container,null,React.createElement(Helmet,null,React.createElement(\"title\",null,\"Search | Nomflix\")),React.createElement(Form,{onSubmit:handleSubmit},React.createElement(Input,{placeholder:\"Search Movies od TV Shows....\",value:searchTerm,onChange:updateTerm})),loading?React.createElement(Loader,null):React.createElement(React.Fragment,null,movieResults&&movieResults.length>0&&React.createElement(Section,{title:\"Movie Results\"},movieResults.map(function(movie){return React.createElement(Poster,{key:movie.id,id:movie.id,title:movie.original_title,rating:movie.vote_average,imageUrl:movie.poster_path,isMovie:true,year:movie.release_date&&movie.release_date.substring(0,4)});})),tvResults&&tvResults.length>0&&React.createElement(Section,{title:\"TV Show Results\"},tvResults.map(function(show){return React.createElement(\"span\",{key:show.id},show.name);}))),error&&React.createElement(Massage,{color:\"#e74c3c\",text:error}),tvResults&&movieResults&&tvResults.length===0&&movieResults.length===0&&React.createElement(Massage,{color:\"#7f8c8d\",text:\"Nothing found\"}));};export default SearchPresenter;","map":{"version":3,"sources":["/Users/youngjikim/workspace-directory/react_project-directory/nomflix-react-projext/src/Routes/Search/SearchPresenter.js"],"names":["React","styled","Loader","Section","Massage","Poster","Helmet","Container","div","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","error","loading","handleSubmit","updateTerm","length","map","movie","id","original_title","vote_average","poster_path","release_date","substring","show","name"],"mappings":"6uBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CACA,OAAQC,MAAR,KAAqB,cAArB,CAEA,GAAMC,CAAAA,SAAS,CAAGN,MAAM,CAACO,GAAV,mBAAf,CAIA,GAAMC,CAAAA,IAAI,CAAGR,MAAM,CAACS,IAAV,oBAAV,CAKA,GAAMC,CAAAA,KAAK,CAAGV,MAAM,CAACW,KAAV,oBAAX,CAMA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,UAAEC,CAAAA,YAAF,MAAEA,YAAF,CACGC,SADH,MACGA,SADH,CAEGC,UAFH,MAEGA,UAFH,CAGGC,KAHH,MAGGA,KAHH,CAIGC,OAJH,MAIGA,OAJH,CAKGC,YALH,MAKGA,YALH,CAMGC,UANH,MAMGA,UANH,OAOtB,qBAAC,SAAD,MACI,oBAAC,MAAD,MACE,oDADF,CADJ,CAIA,oBAAC,IAAD,EAAM,QAAQ,CAAED,YAAhB,EACE,oBAAC,KAAD,EAAO,WAAW,CAAC,+BAAnB,CAAmD,KAAK,CAAEH,UAA1D,CAAsE,QAAQ,CAAEI,UAAhF,EADF,CAJA,CAOCF,OAAO,CAAG,oBAAC,MAAD,MAAH,CAAe,wCACpBJ,YAAY,EAAIA,YAAY,CAACO,MAAb,CAAsB,CAAtC,EACC,oBAAC,OAAD,EAAS,KAAK,CAAC,eAAf,EACGP,YAAY,CAACQ,GAAb,CAAiB,SAAAC,KAAK,QACrB,qBAAC,MAAD,EAAQ,GAAG,CAAEA,KAAK,CAACC,EAAnB,CACQ,EAAE,CAAED,KAAK,CAACC,EADlB,CAEQ,KAAK,CAAED,KAAK,CAACE,cAFrB,CAGQ,MAAM,CAAEF,KAAK,CAACG,YAHtB,CAIQ,QAAQ,CAAEH,KAAK,CAACI,WAJxB,CAKQ,OAAO,CAAE,IALjB,CAMQ,IAAI,CAAEJ,KAAK,CAACK,YAAN,EAAsBL,KAAK,CAACK,YAAN,CAAmBC,SAAnB,CAA6B,CAA7B,CAA+B,CAA/B,CANpC,EADqB,EAAtB,CADH,CAFmB,CAepBd,SAAS,EAAIA,SAAS,CAACM,MAAV,CAAmB,CAAhC,EACC,oBAAC,OAAD,EAAS,KAAK,CAAC,iBAAf,EACGN,SAAS,CAACO,GAAV,CAAc,SAAAQ,IAAI,QACjB,6BAAM,GAAG,CAAEA,IAAI,CAACN,EAAhB,EAAqBM,IAAI,CAACC,IAA1B,CADiB,EAAlB,CADH,CAhBmB,CAPvB,CA8BGd,KAAK,EAAI,oBAAC,OAAD,EAAS,KAAK,CAAC,SAAf,CAAyB,IAAI,CAAEA,KAA/B,EA9BZ,CA+BGF,SAAS,EAAID,YAAb,EAA6BC,SAAS,CAACM,MAAV,GAAqB,CAAlD,EAAuDP,YAAY,CAACO,MAAb,GAAwB,CAA/E,EACC,oBAAC,OAAD,EAAS,KAAK,CAAC,SAAf,CAAyB,IAAI,CAAC,eAA9B,EAhCJ,CAPsB,EAAxB,CAqDA,cAAeR,CAAAA,eAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport Massage from \"../../Components/Massage\";\nimport Poster from \"../../Components/Poster\";\nimport {Helmet} from \"react-helmet\";\n\nconst Container = styled.div`\n  padding:0px 20px\n  `;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width:100%;\n  `;\n\nconst Input = styled.input`\n  all:unset; \n  font-size:28px;\n  width:100%;\n  `;\n\nconst SearchPresenter = ({movieResults,\n                           tvResults,\n                           searchTerm,\n                           error,\n                           loading,\n                           handleSubmit,\n                           updateTerm}) =>\n  <Container>\n      <Helmet>\n        <title>Search | Nomflix</title>\n      </Helmet>\n  <Form onSubmit={handleSubmit}>\n    <Input placeholder=\"Search Movies od TV Shows....\" value={searchTerm} onChange={updateTerm}/>\n  </Form>\n  {loading ? <Loader/> : <>\n    {movieResults && movieResults.length > 0 && (\n      <Section title=\"Movie Results\">\n        {movieResults.map(movie => (\n          <Poster key={movie.id}\n                  id={movie.id}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  imageUrl={movie.poster_path}\n                  isMovie={true}\n                  year={movie.release_date && movie.release_date.substring(0,4)}\n          />        ))}\n      </Section>\n    )}\n\n    {tvResults && tvResults.length > 0 && (\n      <Section title=\"TV Show Results\">\n        {tvResults.map(show => (\n          <span key={show.id}>{show.name}</span>\n        ))}\n      </Section>\n    )}\n  </>}\n    {error && <Massage color=\"#e74c3c\" text={error}/>}\n    {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && (\n      <Massage color=\"#7f8c8d\" text=\"Nothing found\"/>\n      )}\n  </Container>;\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;"]},"metadata":{},"sourceType":"module"}