{"ast":null,"code":"var _jsxFileName = \"/Users/youngjikim/workspace-directory/react_project-directory/nomflix-react-projext/src/Routes/Home/HomeContainer.js\";\nimport React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"../../api\";\nexport default class extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      nowPlaying: null,\n      upComing: null,\n      popular: null,\n      error: null,\n      loading: true\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const {\n        data: {\n          results: nowPlaying\n        }\n      } = await moviesApi.nowPlaying(); // 비구조 할당으로 꺼내서 다시 이름지정해서 불러오기\n      //awiat뒤가 끝나기 전에는 다른것을 진행하지 말아달라는 의미(여기서 끝났다는것과 성공했다는것은 다르다.)\n      // 실패할수도있고 성공할수도있는데 일단은 기다려주는것이다.\n      // 자바스크립트는 나를 기다려주지않는다. 하지만 async/awiat은 기다려준다(일이끝나기를기다려준다는 의미)\n      // console.log(nowPlaying)\n\n      const {\n        data: {\n          results: upComing\n        }\n      } = await moviesApi.upcoming();\n      const {\n        data: {\n          results: popular\n        }\n      } = await moviesApi.popular();\n      throw Error(); // 만약이렇게 중간에 에러가 발생하면 .catch를 타게된다.\n\n      this.setState({\n        nowPlaying: nowPlaying,\n        upComing,\n        popular\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find Movies information.\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      nowPlaying,\n      upcoming,\n      popular,\n      error,\n      loading\n    } = this.state;\n    console.log(this.state);\n    return React.createElement(HomePresenter, {\n      nowPlaying: nowPlaying,\n      upcoming: upcoming,\n      popular: popular,\n      error: error,\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/youngjikim/workspace-directory/react_project-directory/nomflix-react-projext/src/Routes/Home/HomeContainer.js"],"names":["React","HomePresenter","moviesApi","Component","state","nowPlaying","upComing","popular","error","loading","componentDidMount","data","results","upcoming","Error","setState","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAAQC,SAAR,QAAwB,WAAxB;AAEA,eAAe,cAAcF,KAAK,CAACG,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC3CC,KAD2C,GACnC;AACNC,MAAAA,UAAU,EAAE,IADN;AAENC,MAAAA,QAAQ,EAAE,IAFJ;AAGNC,MAAAA,OAAO,EAAE,IAHH;AAINC,MAAAA,KAAK,EAAE,IAJD;AAKNC,MAAAA,OAAO,EAAE;AALH,KADmC;AAAA;;AAS3C,QAAMC,iBAAN,GAA0B;AACxB,QAAI;AACF,YAAM;AAACC,QAAAA,IAAI,EAAE;AAAEC,UAAAA,OAAO,EAAEP;AAAX;AAAP,UAAkC,MAAMH,SAAS,CAACG,UAAV,EAA9C,CADE,CACoE;AACtE;AACA;AACA;AACA;;AACA,YAAM;AAACM,QAAAA,IAAI,EAAE;AAAEC,UAAAA,OAAO,EAAEN;AAAX;AAAP,UAAgC,MAAMJ,SAAS,CAACW,QAAV,EAA5C;AACA,YAAM;AAACF,QAAAA,IAAI,EAAE;AAAEC,UAAAA,OAAO,EAAEL;AAAX;AAAP,UAA+B,MAAML,SAAS,CAACK,OAAV,EAA3C;AACA,YAAMO,KAAK,EAAX,CARE,CAQa;;AACf,WAAKC,QAAL,CAAc;AACZV,QAAAA,UAAU,EAACA,UADC;AAEZC,QAAAA,QAFY;AAGZC,QAAAA;AAHY,OAAd;AAKD,KAdD,CAcE,MAAM;AACN,WAAKQ,QAAL,CAAc;AACZP,QAAAA,KAAK,EAAE;AADK,OAAd;AAGD,KAlBD,SAkBU;AACR,WAAKO,QAAL,CAAc;AACZN,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD;AACF;;AAEDO,EAAAA,MAAM,GAAG;AACP,UAAM;AAACX,MAAAA,UAAD;AAAaQ,MAAAA,QAAb;AAAuBN,MAAAA,OAAvB;AAAgCC,MAAAA,KAAhC;AAAuCC,MAAAA;AAAvC,QAAkD,KAAKL,KAA7D;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAjB;AACA,WACE,oBAAC,aAAD;AACE,MAAA,UAAU,EAAEC,UADd;AAEE,MAAA,QAAQ,EAAEQ,QAFZ;AAGE,MAAA,OAAO,EAAEN,OAHX;AAIE,MAAA,KAAK,EAAEC,KAJT;AAKE,MAAA,OAAO,EAAEC,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD;;AA/C0C","sourcesContent":["import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport {moviesApi} from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upComing: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {data: { results: nowPlaying }} = await moviesApi.nowPlaying(); // 비구조 할당으로 꺼내서 다시 이름지정해서 불러오기\n      //awiat뒤가 끝나기 전에는 다른것을 진행하지 말아달라는 의미(여기서 끝났다는것과 성공했다는것은 다르다.)\n      // 실패할수도있고 성공할수도있는데 일단은 기다려주는것이다.\n      // 자바스크립트는 나를 기다려주지않는다. 하지만 async/awiat은 기다려준다(일이끝나기를기다려준다는 의미)\n      // console.log(nowPlaying)\n      const {data: { results: upComing }} = await moviesApi.upcoming();\n      const {data: { results: popular }} = await moviesApi.popular();\n      throw Error(); // 만약이렇게 중간에 에러가 발생하면 .catch를 타게된다.\n      this.setState({\n        nowPlaying:nowPlaying,\n        upComing,\n        popular\n      })\n    } catch {\n      this.setState({\n        error: \"Can't find Movies information.\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const {nowPlaying, upcoming, popular, error, loading} = this.state;\n    console.log(this.state)\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}