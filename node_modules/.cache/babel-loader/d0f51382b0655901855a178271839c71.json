{"ast":null,"code":"var _jsxFileName = \"/Users/youngjikim/workspace/react_project/nomflix-react-projext/src/Routes/Search/SearchContainer.js\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi } from \"../../api\";\nimport { tvApi } from \"../../api\";\nexport default class extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movieResults: null,\n      tvResults: null,\n      searchTerm: \"code\",\n      error: null,\n      loading: false\n    };\n\n    this.handleSubmit = () => {\n      const {\n        searchTerm\n      } = this.state;\n\n      if (searchTerm !== \"\") {\n        this.searchByTerm();\n      }\n    };\n\n    this.searchByTerm = async () => {\n      const {\n        searchTerm\n      } = this.state;\n\n      try {\n        const movieResults = await moviesApi.search(searchTerm);\n        const showResults = await tvApi.search(searchTerm);\n        console.log(movieResults, showResults);\n        this.setState({\n          loading: true\n        });\n      } catch {\n        this.setState({\n          error: \"Can't find results.\"\n        });\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.handleSubmit();\n  }\n\n  render() {\n    const {\n      movieResults,\n      tvResults,\n      searchTerm,\n      error,\n      loading\n    } = this.state;\n    return React.createElement(SearchPresenter, {\n      movieResults: movieResults,\n      tvResults: tvResults,\n      searchTerm: searchTerm,\n      error: error,\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/youngjikim/workspace/react_project/nomflix-react-projext/src/Routes/Search/SearchContainer.js"],"names":["React","SearchPresenter","moviesApi","tvApi","Component","state","movieResults","tvResults","searchTerm","error","loading","handleSubmit","searchByTerm","search","showResults","console","log","setState","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAAQC,SAAR,QAAwB,WAAxB;AACA,SAAQC,KAAR,QAAoB,WAApB;AAEA,eAAe,cAAcH,KAAK,CAACI,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC3CC,KAD2C,GACnC;AACNC,MAAAA,YAAY,EAAE,IADR;AAENC,MAAAA,SAAS,EAAE,IAFL;AAGNC,MAAAA,UAAU,EAAE,MAHN;AAINC,MAAAA,KAAK,EAAE,IAJD;AAKNC,MAAAA,OAAO,EAAE;AALH,KADmC;;AAAA,SAa3CC,YAb2C,GAa5B,MAAM;AACnB,YAAM;AAAEH,QAAAA;AAAF,UAAiB,KAAKH,KAA5B;;AACA,UAAGG,UAAU,KAAK,EAAlB,EAAsB;AACpB,aAAKI,YAAL;AACD;AACF,KAlB0C;;AAAA,SAoB3CA,YApB2C,GAoB5B,YAAY;AACzB,YAAM;AAAEJ,QAAAA;AAAF,UAAiB,KAAKH,KAA5B;;AACA,UAAI;AACF,cAAMC,YAAY,GAAG,MAAMJ,SAAS,CAACW,MAAV,CAAiBL,UAAjB,CAA3B;AACA,cAAMM,WAAW,GAAG,MAAMX,KAAK,CAACU,MAAN,CAAaL,UAAb,CAA1B;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ,EAA0BQ,WAA1B;AACA,aAAKG,QAAL,CAAc;AAACP,UAAAA,OAAO,EAAG;AAAX,SAAd;AACD,OALD,CAKC,MAAM;AACL,aAAKO,QAAL,CAAc;AAACR,UAAAA,KAAK,EAAC;AAAP,SAAd;AACD,OAPD,SAOU;AACR,aAAKQ,QAAL,CAAc;AAACP,UAAAA,OAAO,EAAG;AAAX,SAAd;AACD;AACF,KAhC0C;AAAA;;AAS3CQ,EAAAA,iBAAiB,GAAG;AAClB,SAAKP,YAAL;AACD;;AAuBDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAACb,MAAAA,YAAD;AAAeC,MAAAA,SAAf;AAA0BC,MAAAA,UAA1B;AAAsCC,MAAAA,KAAtC;AAA6CC,MAAAA;AAA7C,QAAwD,KAAKL,KAAnE;AACA,WACE,oBAAC,eAAD;AACE,MAAA,YAAY,EAAEC,YADhB;AAEE,MAAA,SAAS,EAAEC,SAFb;AAGE,MAAA,UAAU,EAAEC,UAHd;AAIE,MAAA,KAAK,EAAEC,KAJT;AAKE,MAAA,OAAO,EAAEC,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD;;AA7C0C","sourcesContent":["import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport {moviesApi} from \"../../api\";\nimport {tvApi} from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"code\",\n    error: null,\n    loading: false\n  };\n\n  componentDidMount() {\n    this.handleSubmit();\n  }\n\n  handleSubmit = () => {\n    const { searchTerm } = this.state;\n    if(searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  }\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    try {\n      const movieResults = await moviesApi.search(searchTerm);\n      const showResults = await tvApi.search(searchTerm);\n      console.log(movieResults, showResults);\n      this.setState({loading : true});\n    }catch {\n      this.setState({error:\"Can't find results.\"});\n    } finally {\n      this.setState({loading : false});\n    }\n  };\n\n  render() {\n    const {movieResults, tvResults, searchTerm, error, loading} = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}