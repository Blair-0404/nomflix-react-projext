{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/youngjikim/workspace-directory/react_project-directory/nomflix-react-projext/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  padding:20px\\n\\n  \"]);_templateObject=function _templateObject(){return data;};return data;}import React from\"react\";import styled from\"styled-components\";import Section from\"../../Components/Section\";import Loader from\"../../Components/Loader\";import Massage from\"../../Components/Massage\";import Poster from\"../../Components/Poster\";import{Helmet}from\"react-helmet\";var Container=styled.div(_templateObject());var TVPresenter=function TVPresenter(_ref){var topRated=_ref.topRated,popular=_ref.popular,airingToday=_ref.airingToday,error=_ref.error,loading=_ref.loading;return React.createElement(React.Fragment,null,React.createElement(Helmet,null,React.createElement(\"title\",null,\"TV Shows | Nomflix\")),loading?React.createElement(Loader,null):React.createElement(Container,null,topRated&&topRated.length>0&&React.createElement(Section,{title:\"Top Rated Shows\"},topRated.map(function(show){return React.createElement(Poster,{key:show.id,id:show.id,title:show.original_name,rating:show.vote_average,imageUrl:show.poster_path,year:show.first_air_date&&show.first_air_date.substring(0,4)});})),popular&&popular.length>0&&React.createElement(Section,{title:\"Popular Shows\"},popular.map(function(show){return React.createElement(Poster,{key:show.id,id:show.id,title:show.original_name,rating:show.vote_average,imageUrl:show.poster_path,year:show.first_air_date&&show.first_air_date.substring(0,4)});}),\"    \"),airingToday&&airingToday.length>0&&React.createElement(Section,{title:\"Airing Today\"},airingToday.map(function(show){return React.createElement(Poster,{key:show.id,id:show.id,title:show.original_name,rating:show.vote_average,imageUrl:show.poster_path,year:show.first_air_date&&show.first_air_date.substring(0,4)});}),\"    \"),error&&React.createElement(Massage,{color:\"#e74c3c\",text:error})));};export default TVPresenter;","map":{"version":3,"sources":["/Users/youngjikim/workspace-directory/react_project-directory/nomflix-react-projext/src/Routes/TV/TVPresenter.js"],"names":["React","styled","Section","Loader","Massage","Poster","Helmet","Container","div","TVPresenter","topRated","popular","airingToday","error","loading","length","map","show","id","original_name","vote_average","poster_path","first_air_date","substring"],"mappings":"uXAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CACA,OAAQC,MAAR,KAAqB,cAArB,CAEA,GAAMC,CAAAA,SAAS,CAAGN,MAAM,CAACO,GAAV,mBAAf,CAKA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,UAAEC,CAAAA,QAAF,MAAEA,QAAF,CAAYC,OAAZ,MAAYA,OAAZ,CAAqBC,WAArB,MAAqBA,WAArB,CAAkCC,KAAlC,MAAkCA,KAAlC,CAAyCC,OAAzC,MAAyCA,OAAzC,OAClB,yCACE,oBAAC,MAAD,MACE,sDADF,CADF,CAIGA,OAAO,CAAG,oBAAC,MAAD,MAAH,CACV,oBAAC,SAAD,MAEGJ,QAAQ,EAAIA,QAAQ,CAACK,MAAT,CAAkB,CAA9B,EACD,oBAAC,OAAD,EAAS,KAAK,CAAC,iBAAf,EACGL,QAAQ,CAACM,GAAT,CAAa,SAAAC,IAAI,QAChB,qBAAC,MAAD,EAAQ,GAAG,CAAEA,IAAI,CAACC,EAAlB,CACQ,EAAE,CAAED,IAAI,CAACC,EADjB,CAEQ,KAAK,CAAED,IAAI,CAACE,aAFpB,CAGQ,MAAM,CAAEF,IAAI,CAACG,YAHrB,CAIQ,QAAQ,CAAEH,IAAI,CAACI,WAJvB,CAKQ,IAAI,CAAEJ,IAAI,CAACK,cAAL,EAAuBL,IAAI,CAACK,cAAL,CAAoBC,SAApB,CAA8B,CAA9B,CAAgC,CAAhC,CALrC,EADgB,EAAjB,CADH,CAHF,CAcGZ,OAAO,EAAIA,OAAO,CAACI,MAAR,CAAiB,CAA5B,EACD,oBAAC,OAAD,EAAS,KAAK,CAAC,eAAf,EACGJ,OAAO,CAACK,GAAR,CAAY,SAAAC,IAAI,QACf,qBAAC,MAAD,EAAQ,GAAG,CAAEA,IAAI,CAACC,EAAlB,CACQ,EAAE,CAAED,IAAI,CAACC,EADjB,CAEQ,KAAK,CAAED,IAAI,CAACE,aAFpB,CAGQ,MAAM,CAAEF,IAAI,CAACG,YAHrB,CAIQ,QAAQ,CAAEH,IAAI,CAACI,WAJvB,CAKQ,IAAI,CAAEJ,IAAI,CAACK,cAAL,EAAuBL,IAAI,CAACK,cAAL,CAAoBC,SAApB,CAA8B,CAA9B,CAAgC,CAAhC,CALrC,EADe,EAAhB,CADH,QAfF,CAyBGX,WAAW,EAAIA,WAAW,CAACG,MAAZ,CAAqB,CAApC,EACD,oBAAC,OAAD,EAAS,KAAK,CAAC,cAAf,EACGH,WAAW,CAACI,GAAZ,CAAgB,SAAAC,IAAI,QACnB,qBAAC,MAAD,EAAQ,GAAG,CAAEA,IAAI,CAACC,EAAlB,CACQ,EAAE,CAAED,IAAI,CAACC,EADjB,CAEQ,KAAK,CAAED,IAAI,CAACE,aAFpB,CAGQ,MAAM,CAAEF,IAAI,CAACG,YAHrB,CAIQ,QAAQ,CAAEH,IAAI,CAACI,WAJvB,CAKQ,IAAI,CAAEJ,IAAI,CAACK,cAAL,EAAuBL,IAAI,CAACK,cAAL,CAAoBC,SAApB,CAA8B,CAA9B,CAAgC,CAAhC,CALrC,EADmB,EAApB,CADH,QA1BF,CAmCGV,KAAK,EAAI,oBAAC,OAAD,EAAS,KAAK,CAAC,SAAf,CAAyB,IAAI,CAAEA,KAA/B,EAnCZ,CALA,CADkB,EAApB,CAsDA,cAAeJ,CAAAA,WAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Massage from \"../../Components/Massage\";\nimport Poster from \"../../Components/Poster\";\nimport {Helmet} from \"react-helmet\";\n\nconst Container = styled.div`\n  padding:20px\n\n  `;\n\nconst TVPresenter = ({topRated, popular, airingToday, error, loading}) =>\n  <>\n    <Helmet>\n      <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading ? <Loader/> :\n  <Container>\n\n    {topRated && topRated.length > 0 &&\n    <Section title=\"Top Rated Shows\">\n      {topRated.map(show =>\n        <Poster key={show.id}\n                id={show.id}\n                title={show.original_name}\n                rating={show.vote_average}\n                imageUrl={show.poster_path}\n                year={show.first_air_date && show.first_air_date.substring(0,4)}\n        />      )}\n    </Section>}\n\n    {popular && popular.length > 0 &&\n    <Section title=\"Popular Shows\">\n      {popular.map(show =>\n        <Poster key={show.id}\n                id={show.id}\n                title={show.original_name}\n                rating={show.vote_average}\n                imageUrl={show.poster_path}\n                year={show.first_air_date && show.first_air_date.substring(0,4)}\n        />      )}    </Section>}\n\n    {airingToday && airingToday.length > 0 &&\n    <Section title=\"Airing Today\">\n      {airingToday.map(show =>\n        <Poster key={show.id}\n                id={show.id}\n                title={show.original_name}\n                rating={show.vote_average}\n                imageUrl={show.poster_path}\n                year={show.first_air_date && show.first_air_date.substring(0,4)}\n        />      )}    </Section>}\n    {error && <Massage color=\"#e74c3c\" text={error}/>}\n\n  </Container>}\n    </>;\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default TVPresenter;"]},"metadata":{},"sourceType":"module"}