{"ast":null,"code":"var _jsxFileName = \"/Users/youngjikim/workspace-directory/react_project-directory/nomflix-react-projext/src/Routes/Search/SearchContainer.js\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi } from \"../../api\";\nimport { tvApi } from \"../../api\";\nexport default class extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movieResults: null,\n      tvResults: null,\n      searchTerm: \"\",\n      error: null,\n      loading: false\n    };\n\n    this.handleSubmit = event => {\n      // 검색창에 검색 후 엔터를 누르면 searchTerm이 빈칸이 아닌것을 체크 후 search함수 실행\n      event.preventDefault();\n      const {\n        searchTerm\n      } = this.state;\n\n      if (searchTerm !== \"\") {\n        this.searchByTerm();\n      }\n    };\n\n    this.searchByTerm = async () => {\n      const {\n        searchTerm\n      } = this.state;\n      this.setState({\n        loading: true\n      });\n\n      try {\n        const {\n          data: {\n            results: movieResults\n          }\n        } = await moviesApi.search(searchTerm);\n        const {\n          data: {\n            results: tvResults\n          }\n        } = await tvApi.search(searchTerm);\n        this.setState({\n          movieResults,\n          tvResults\n        });\n      } catch {\n        this.setState({\n          error: \"Can't find results.\"\n        });\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      movieResults,\n      tvResults,\n      searchTerm,\n      error,\n      loading\n    } = this.state; // console.log(this.state)\n\n    return React.createElement(SearchPresenter, {\n      movieResults: movieResults,\n      tvResults: tvResults,\n      searchTerm: searchTerm,\n      error: error,\n      loading: loading,\n      handleSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/youngjikim/workspace-directory/react_project-directory/nomflix-react-projext/src/Routes/Search/SearchContainer.js"],"names":["React","SearchPresenter","moviesApi","tvApi","Component","state","movieResults","tvResults","searchTerm","error","loading","handleSubmit","event","preventDefault","searchByTerm","setState","data","results","search","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAAQC,SAAR,QAAwB,WAAxB;AACA,SAAQC,KAAR,QAAoB,WAApB;AAEA,eAAe,cAAcH,KAAK,CAACI,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC3CC,KAD2C,GACnC;AACNC,MAAAA,YAAY,EAAE,IADR;AAENC,MAAAA,SAAS,EAAE,IAFL;AAGNC,MAAAA,UAAU,EAAE,EAHN;AAINC,MAAAA,KAAK,EAAE,IAJD;AAKNC,MAAAA,OAAO,EAAE;AALH,KADmC;;AAAA,SAS3CC,YAT2C,GAS3BC,KAAD,IAAW;AAAE;AAC1BA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAACL,QAAAA;AAAD,UAAe,KAAKH,KAA1B;;AACA,UAAIG,UAAU,KAAK,EAAnB,EAAuB;AACrB,aAAKM,YAAL;AACD;AACF,KAf0C;;AAAA,SAmB3CA,YAnB2C,GAmB5B,YAAY;AACzB,YAAM;AAACN,QAAAA;AAAD,UAAe,KAAKH,KAA1B;AACA,WAAKU,QAAL,CAAc;AAACL,QAAAA,OAAO,EAAE;AAAV,OAAd;;AACA,UAAI;AACF,cAAM;AAACM,UAAAA,IAAI,EAAE;AAACC,YAAAA,OAAO,EAAEX;AAAV;AAAP,YAAkC,MAAMJ,SAAS,CAACgB,MAAV,CAAiBV,UAAjB,CAA9C;AACA,cAAM;AAACQ,UAAAA,IAAI,EAAE;AAACC,YAAAA,OAAO,EAAEV;AAAV;AAAP,YAA+B,MAAMJ,KAAK,CAACe,MAAN,CAAaV,UAAb,CAA3C;AACA,aAAKO,QAAL,CAAc;AACZT,UAAAA,YADY;AAEZC,UAAAA;AAFY,SAAd;AAID,OAPD,CAOE,MAAM;AACN,aAAKQ,QAAL,CAAc;AAACN,UAAAA,KAAK,EAAE;AAAR,SAAd;AACD,OATD,SASU;AACR,aAAKM,QAAL,CAAc;AAACL,UAAAA,OAAO,EAAE;AAAV,SAAd;AACD;AACF,KAlC0C;AAAA;;AAoC3CS,EAAAA,MAAM,GAAG;AACP,UAAM;AAACb,MAAAA,YAAD;AAAeC,MAAAA,SAAf;AAA0BC,MAAAA,UAA1B;AAAsCC,MAAAA,KAAtC;AAA6CC,MAAAA;AAA7C,QAAwD,KAAKL,KAAnE,CADO,CAEP;;AACA,WACE,oBAAC,eAAD;AACE,MAAA,YAAY,EAAEC,YADhB;AAEE,MAAA,SAAS,EAAEC,SAFb;AAGE,MAAA,UAAU,EAAEC,UAHd;AAIE,MAAA,KAAK,EAAEC,KAJT;AAKE,MAAA,OAAO,EAAEC,OALX;AAME,MAAA,YAAY,EAAE,KAAKC,YANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD;;AAjD0C","sourcesContent":["import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport {moviesApi} from \"../../api\";\nimport {tvApi} from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false\n  };\n\n  handleSubmit = (event) => { // 검색창에 검색 후 엔터를 누르면 searchTerm이 빈칸이 아닌것을 체크 후 search함수 실행\n    event.preventDefault();\n    const {searchTerm} = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  uo\n\n  searchByTerm = async () => {\n    const {searchTerm} = this.state;\n    this.setState({loading: true});\n    try {\n      const {data: {results: movieResults}} = await moviesApi.search(searchTerm);\n      const {data: {results: tvResults}} = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults\n      });\n    } catch {\n      this.setState({error: \"Can't find results.\"});\n    } finally {\n      this.setState({loading: false});\n    }\n  };\n\n  render() {\n    const {movieResults, tvResults, searchTerm, error, loading} = this.state;\n    // console.log(this.state)\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n      />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}