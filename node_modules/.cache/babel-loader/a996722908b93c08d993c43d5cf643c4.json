{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/youngjikim/workspace-directory/react_project-directory/nomflix-react-projext/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  padding:20px\\n    \"]);_templateObject=function _templateObject(){return data;};return data;}import React from\"react\";import styled from\"styled-components\";import{Helmet}from'react-helmet';import Section from'../../Components/Section';import Loader from\"../../Components/Loader\";import Massage from\"../../Components/Massage\";import Poster from\"../../Components/Poster\";var Container=styled.div(_templateObject());var HomePresenter=function HomePresenter(_ref){var nowPlaying=_ref.nowPlaying,upcoming=_ref.upcoming,popular=_ref.popular,error=_ref.error,loading=_ref.loading;return React.createElement(React.Fragment,null,React.createElement(Helmet,null,React.createElement(\"title\",null,\"Movies | Nomflix\")),loading?React.createElement(Loader,null):React.createElement(Container,null,nowPlaying&&nowPlaying.length>0&&React.createElement(Section,{title:\"Now Playing\"},nowPlaying.map(function(movie){return React.createElement(Poster,{key:movie.id,id:movie.id,title:movie.original_title,rating:movie.vote_average,imageUrl:movie.poster_path,isMovie:true,year:movie.release_date&&movie.release_date.substring(0,4)});})),upcoming&&upcoming.length>0&&React.createElement(Section,{title:\"Upcoming Movies\"},upcoming.map(function(movie){return React.createElement(Poster,{key:movie.id,id:movie.id,title:movie.original_title,rating:movie.vote_average,imageUrl:movie.poster_path,isMovie:true,year:movie.release_date&&movie.release_date.substring(0,4)});})),popular&&popular.length>0&&React.createElement(Section,{title:\"Popular Movies\"},popular.map(function(movie){return React.createElement(Poster,{key:movie.id,id:movie.id,title:movie.original_title,rating:movie.vote_average,imageUrl:movie.poster_path,isMovie:true,year:movie.release_date&&movie.release_date.substring(0,4)});})),error&&React.createElement(Massage,{color:\"#e74c3c\",text:error})));};export default HomePresenter;","map":{"version":3,"sources":["/Users/youngjikim/workspace-directory/react_project-directory/nomflix-react-projext/src/Routes/Home/HomePresenter.js"],"names":["React","styled","Helmet","Section","Loader","Massage","Poster","Container","div","HomePresenter","nowPlaying","upcoming","popular","error","loading","length","map","movie","id","original_title","vote_average","poster_path","release_date","substring"],"mappings":"uXAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAAQC,MAAR,KAAqB,cAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CAEA,GAAMC,CAAAA,SAAS,CAAGN,MAAM,CAACO,GAAV,mBAAf,CAIA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,UAAEC,CAAAA,UAAF,MAAEA,UAAF,CAAcC,QAAd,MAAcA,QAAd,CAAwBC,OAAxB,MAAwBA,OAAxB,CAAiCC,KAAjC,MAAiCA,KAAjC,CAAwCC,OAAxC,MAAwCA,OAAxC,OACpB,yCACE,oBAAC,MAAD,MACE,oDADF,CADF,CAIGA,OAAO,CAAG,oBAAC,MAAD,MAAH,CACN,oBAAC,SAAD,MACGJ,UAAU,EAAIA,UAAU,CAACK,MAAX,CAAoB,CAAlC,EACD,oBAAC,OAAD,EAAS,KAAK,CAAC,aAAf,EACGL,UAAU,CAACM,GAAX,CAAe,SAAAC,KAAK,QACnB,qBAAC,MAAD,EAAQ,GAAG,CAAEA,KAAK,CAACC,EAAnB,CACQ,EAAE,CAAED,KAAK,CAACC,EADlB,CAEQ,KAAK,CAAED,KAAK,CAACE,cAFrB,CAGQ,MAAM,CAAEF,KAAK,CAACG,YAHtB,CAIQ,QAAQ,CAAEH,KAAK,CAACI,WAJxB,CAKQ,OAAO,CAAE,IALjB,CAMQ,IAAI,CAAEJ,KAAK,CAACK,YAAN,EAAsBL,KAAK,CAACK,YAAN,CAAmBC,SAAnB,CAA6B,CAA7B,CAA+B,CAA/B,CANpC,EADmB,EAApB,CADH,CAFF,CAeGZ,QAAQ,EAAIA,QAAQ,CAACI,MAAT,CAAkB,CAA9B,EACD,oBAAC,OAAD,EAAS,KAAK,CAAC,iBAAf,EACGJ,QAAQ,CAACK,GAAT,CAAa,SAAAC,KAAK,QACjB,qBAAC,MAAD,EAAQ,GAAG,CAAEA,KAAK,CAACC,EAAnB,CACQ,EAAE,CAAED,KAAK,CAACC,EADlB,CAEQ,KAAK,CAAED,KAAK,CAACE,cAFrB,CAGQ,MAAM,CAAEF,KAAK,CAACG,YAHtB,CAIQ,QAAQ,CAAEH,KAAK,CAACI,WAJxB,CAKQ,OAAO,CAAE,IALjB,CAMQ,IAAI,CAAEJ,KAAK,CAACK,YAAN,EAAsBL,KAAK,CAACK,YAAN,CAAmBC,SAAnB,CAA6B,CAA7B,CAA+B,CAA/B,CANpC,EADiB,EAAlB,CADH,CAhBF,CA4BGX,OAAO,EAAIA,OAAO,CAACG,MAAR,CAAiB,CAA5B,EACD,oBAAC,OAAD,EAAS,KAAK,CAAC,gBAAf,EACGH,OAAO,CAACI,GAAR,CAAY,SAAAC,KAAK,QAChB,qBAAC,MAAD,EAAQ,GAAG,CAAEA,KAAK,CAACC,EAAnB,CACQ,EAAE,CAAED,KAAK,CAACC,EADlB,CAEQ,KAAK,CAAED,KAAK,CAACE,cAFrB,CAGQ,MAAM,CAAEF,KAAK,CAACG,YAHtB,CAIQ,QAAQ,CAAEH,KAAK,CAACI,WAJxB,CAKQ,OAAO,CAAE,IALjB,CAMQ,IAAI,CAAEJ,KAAK,CAACK,YAAN,EAAsBL,KAAK,CAACK,YAAN,CAAmBC,SAAnB,CAA6B,CAA7B,CAA+B,CAA/B,CANpC,EADgB,EAAjB,CADH,CA7BF,CAwCGV,KAAK,EAAI,oBAAC,OAAD,EAAS,KAAK,CAAC,SAAf,CAAyB,IAAI,CAAEA,KAA/B,EAxCZ,CALJ,CADoB,EAAtB,CA2DA,cAAeJ,CAAAA,aAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport {Helmet} from 'react-helmet';\nimport Section from '../../Components/Section'\nimport Loader from \"../../Components/Loader\";\nimport Massage from \"../../Components/Massage\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding:20px\n    `;\n\nconst HomePresenter = ({nowPlaying, upcoming, popular, error, loading}) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? <Loader/> : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 &&\n        <Section title=\"Now Playing\">\n          {nowPlaying.map(movie =>\n            <Poster key={movie.id}\n                    id={movie.id}\n                    title={movie.original_title}\n                    rating={movie.vote_average}\n                    imageUrl={movie.poster_path}\n                    isMovie={true}\n                    year={movie.release_date && movie.release_date.substring(0,4)}\n            />\n          )}\n        </Section>}\n\n        {upcoming && upcoming.length > 0 &&\n        <Section title=\"Upcoming Movies\">\n          {upcoming.map(movie =>\n            <Poster key={movie.id}\n                    id={movie.id}\n                    title={movie.original_title}\n                    rating={movie.vote_average}\n                    imageUrl={movie.poster_path}\n                    isMovie={true}\n                    year={movie.release_date && movie.release_date.substring(0,4)}\n            />      )}\n        </Section>}\n\n        {popular && popular.length > 0 &&\n        <Section title=\"Popular Movies\">\n          {popular.map(movie =>\n            <Poster key={movie.id}\n                    id={movie.id}\n                    title={movie.original_title}\n                    rating={movie.vote_average}\n                    imageUrl={movie.poster_path}\n                    isMovie={true}\n                    year={movie.release_date && movie.release_date.substring(0,4)}\n            />      )}\n        </Section>}\n        {error && <Massage color=\"#e74c3c\" text={error}/>}\n      </Container>)}\n    </>);\n\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default HomePresenter;"]},"metadata":{},"sourceType":"module"}