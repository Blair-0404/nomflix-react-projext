{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Massage.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Massage","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","Loader","map","movie","key","original_title","vote_average","poster_path","release_date","base_url","api_key","moviesApi","axios","get","params","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","name","SearchContainer","event","preventDefault","searchByTerm","e","target","a","Backdrop","bgImage","Content","Cover","Date","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","idx","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d794d7a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.21a837eb.png\";","// contentsList만들기\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\n\nconst Container = styled.div`\n  :not(:last-child) {\n  margin-bottom:50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 16px;\n  font-weight:600;\n`;\n\nconst Grid = styled.div`\n  margin-top:25px;\n  display:grid;\n  grid-template-columns:repeat(auto-fill, 125px);\n  grid-gap:25px;\n`;\n\nconst Section  = ({title, children}) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n    {/*title은 부모의 title prop을 받아오지만*/}\n    {/*여기서 children은 부모의 props가 아닌 부모의 본 section컴포넌트 태그사이의 data?를 그대로 받아온다!*/}\n  </Container>\n\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section","import React from \"react\";\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n  height: 100vh;\n  width:100vw;\n  display:flex;\n  justify-content:center;\n  font-size:40px;\n  // margin-top:200px;\n  `;\n\nexport default () => (\n  <Container>\n  <span role=\"img\" aria-label=\"Loading\">\n    Loading...\n  </span>\n</Container>\n);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width:100vw;\n  display:flex;\n  justify-content:center;\n  `;\n\nconst Text = styled.span`\n  color: ${props => props.color}\n  `;\n\n\n\nconst Massage  = ({text, color}) =>(\n  <Container>\n    <Text color={color}>{text}</Text>\n    </Container>\n);\n\nMassage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\n\nexport default Massage\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport {Link} from 'react-router-dom'\nimport { FaStar } from 'react-icons/fa';\n\nconst Container = styled.div`\n  font-size:12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height:180px;\n  background-size:cover;\n  border-radius:4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n  `;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position:absolute;\n  opacity:0;\n  `;\n\nconst ImageContainer = styled.div`\n  margin-bottom:5px;\n  position:relative;\n  &:hover {\n    ${Image} {\n      opacity:0.3;\n    }\n    ${Rating} {\n      opacity:1;\n  }\n  `;\n\nconst Title = styled.span`\n  display:block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n    font-size:10px;\n    color:rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({id, imageUrl, title, rating, year, isMovie = false}) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n  <Container>\n    <ImageContainer>\n      <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300/${imageUrl}` : require(\"../assets/noPosterSmall.png\")}/>\n      <Rating>\n        <span role=\"img\" aria-label=\"rating\"><FaStar/></span>\n        {rating}/10\n      </Rating>\n    </ImageContainer>\n    <Title>{title.length > 18 ? `${title.substring(0,18)}...` : title}</Title>\n    <Year>{year}</Year>\n  </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool.isRequired\n}\n\nexport default Poster;","import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport {Helmet} from 'react-helmet';\nimport Section from '../../Components/Section'\nimport Loader from \"../../Components/Loader\";\nimport Massage from \"../../Components/Massage\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding:20px\n    `;\n\nconst HomePresenter = ({nowPlaying, upcoming, popular, error, loading}) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? <Loader/> : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 &&\n        <Section title=\"Now Playing\">\n          {nowPlaying.map(movie =>\n            <Poster key={movie.id}\n                    id={movie.id}\n                    title={movie.original_title}\n                    rating={movie.vote_average}\n                    imageUrl={movie.poster_path}\n                    isMovie={true}\n                    year={movie.release_date && movie.release_date.substring(0,4)}\n            />\n          )}\n        </Section>}\n\n        {upcoming && upcoming.length > 0 &&\n        <Section title=\"Upcoming Movies\">\n          {upcoming.map(movie =>\n            <Poster key={movie.id}\n                    id={movie.id}\n                    title={movie.original_title}\n                    rating={movie.vote_average}\n                    imageUrl={movie.poster_path}\n                    isMovie={true}\n                    year={movie.release_date && movie.release_date.substring(0,4)}\n            />      )}\n        </Section>}\n\n        {popular && popular.length > 0 &&\n        <Section title=\"Popular Movies\">\n          {popular.map(movie =>\n            <Poster key={movie.id}\n                    id={movie.id}\n                    title={movie.original_title}\n                    rating={movie.vote_average}\n                    imageUrl={movie.poster_path}\n                    isMovie={true}\n                    year={movie.release_date && movie.release_date.substring(0,4)}\n            />      )}\n        </Section>}\n        {error && <Massage color=\"#e74c3c\" text={error}/>}\n      </Container>)}\n    </>);\n\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default HomePresenter;","import axios from \"axios\";\n\n// 유니 코드\nconst base_url = 'https://api.themoviedb.org/3';\nconst api_key = '44ebf9cf927b173d893cd89ea3db2e1e';\n\nexport const moviesApi = {\n  nowPlaying: () => axios.get(`${base_url}/movie/now_playing?api_key=${api_key}`),\n  upcoming: () => axios.get(`${base_url}/movie/upcoming?api_key=${api_key}`),\n  popular: () => axios.get(`${base_url}/movie/popular?api_key=${api_key}`),\n  movieDetail: id => axios.get(`${base_url}/movie/${id}?api_key=${api_key}`, {\n    params: {\n      append_to_response: \"videos\"\n    }\n  }),\n  search: term =>\n    axios.get(`${base_url}/search/movie?api_key=${api_key}`, {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n\nexport const tvApi = {\n  topRated: () => axios.get(`${base_url}/tv/top_rated?api_key=${api_key}`),\n  popular: () => axios.get(`${base_url}/tv/popular?api_key=${api_key}`),\n  airingToday: () => axios.get(`${base_url}/tv/airing_today?api_key=${api_key}`),\n  showDetail: id => axios.get(`${base_url}/tv/${id}?api_key=${api_key}`, {\n    params: {\n      append_to_response: \"videos\"\n    }\n  }),\n  search: term =>\n    axios.get(`${base_url}/search/tv?api_key=${api_key}`, {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n\n\n// 니꼬 코드\n//\n// const api = axios.create({\n//   baseURL: \"https://api.themoviedb.org/3/\",\n//   params: {\n//     api_key: \"44ebf9cf927b173d893cd89ea3db2e1e\",\n//     language: \"en-US\"\n//   }\n// });\n//\n//   export const moviesApi = {\n//     nowPlaying: () => api.get(\"movie/now_playing\"),\n//     upcoming: () => api.get(\"movie/upcoming\"),\n//     popular: () => api.get(\"movie/popular\"),\n//     movieDetail: id =>\n//       api.get(`movie/${id}`, {\n//         params: {\n//           append_to_response: \"videos\"\n//         }\n//       }),\n//     search: term =>\n//       api.get(\"search/movie\", {\n//         params: {\n//           query: encodeURIComponent(term)\n//         }\n//       })\n//   };\n//\n//   export const tvApi = {\n//     topRated: () => api.get(\"tv/top_rated\"),\n//     popular: () => api.get(\"tv/popular\"),\n//     airingToday: () => api.get(\"tv/airing_today\"),\n//     showDetail: id =>\n//       api.get(`tv/${id}`, {\n//         params: {\n//           append_to_response: \"videos\"\n//         }\n//       }),\n//     search: term =>\n//       api.get(\"search/tv\", {\n//         params: {\n//           query: encodeURIComponent(term)\n//         }\n//       })\n//   };\n//\n","import  HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport {moviesApi} from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {data: { results: nowPlaying }} = await moviesApi.nowPlaying(); // 비구조 할당으로 꺼내서 다시 이름지정해서 불러오기\n      //awiat뒤가 끝나기 전에는 다른것을 진행하지 말아달라는 의미(여기서 끝났다는것과 성공했다는것은 다르다.)\n      // 실패할수도있고 성공할수도있는데 일단은 기다려주는것이다.\n      // 자바스크립트는 나를 기다려주지않는다. 하지만 async/awiat은 기다려준다(일이끝나기를기다려준다는 의미)\n      // console.log(nowPlaying)\n      const {data: { results: upcoming }} = await moviesApi.upcoming();\n      const {data: { results: popular }} = await moviesApi.popular();\n      // throw Error(); // 만약이렇게 중간에 에러가 발생하면 .catch를 타게된다.\n      this.setState({\n        nowPlaying:nowPlaying, // 같으면 한번만써도된다.\n        upcoming,\n        popular\n      })\n    } catch {\n      this.setState({\n        error: \"Can't find Movies information.\"\n      });\n    } finally { // finally는 무조건 결과가 끝나면 실행된다.\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const {nowPlaying, upcoming, popular, error, loading} = this.state;\n    // console.log(this.state)\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Massage from \"../../Components/Massage\";\nimport Poster from \"../../Components/Poster\";\nimport {Helmet} from \"react-helmet\";\n\nconst Container = styled.div`\n  padding:20px\n\n  `;\n\nconst TVPresenter = ({topRated, popular, airingToday, error, loading}) =>\n  <>\n    <Helmet>\n      <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading ? <Loader/> :\n  <Container>\n\n    {topRated && topRated.length > 0 &&\n    <Section title=\"Top Rated Shows\">\n      {topRated.map(show =>\n        <Poster key={show.id}\n                id={show.id}\n                title={show.original_name}\n                rating={show.vote_average}\n                imageUrl={show.poster_path}\n                year={show.first_air_date && show.first_air_date.substring(0,4)}\n        />      )}\n    </Section>}\n\n    {popular && popular.length > 0 &&\n    <Section title=\"Popular Shows\">\n      {popular.map(show =>\n        <Poster key={show.id}\n                id={show.id}\n                title={show.original_name}\n                rating={show.vote_average}\n                imageUrl={show.poster_path}\n                year={show.first_air_date && show.first_air_date.substring(0,4)}\n        />      )}    </Section>}\n\n    {airingToday && airingToday.length > 0 &&\n    <Section title=\"Airing Today\">\n      {airingToday.map(show =>\n        <Poster key={show.id}\n                id={show.id}\n                title={show.original_name}\n                rating={show.vote_average}\n                imageUrl={show.poster_path}\n                year={show.first_air_date && show.first_air_date.substring(0,4)}\n        />      )}    </Section>}\n    {error && <Massage color=\"#e74c3c\" text={error}/>}\n\n  </Container>}\n    </>;\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default TVPresenter;","import  TVContainer from \"./TVContainer\";\n\nexport default TVContainer","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport {tvApi} from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() { //혹은 arror function형태라면 아래처럼 써도된다.\n    // componentDidMount = async() => {\n    try {\n      const {data: {results: topRated}} = await tvApi.topRated();\n      const {data: {results: popular}} = await tvApi.popular();\n      const {data: {results: airingToday}} = await tvApi.airingToday();\n      this.setState({topRated, popular, airingToday});\n    } catch {\n      this.setState({\n        error: \"Can't find movies information.\"\n      })\n    } finally {\n      this.setState({loading: false});\n    }\n  }\n\n\n  render() {\n    const {topRated, popular, airingToday, error, loading} = this.state;\n    // console.log(this.state)\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\ncolor: white;\nposition:fixed;\ntop: 0;\nleft: 0;\nwidth: 100%;\nheight: 50px;\ndisplay:flex;\nalign-items:center;\npadding:0px 10px;\nbackground-color:rgba(20,20,20,0.7);\nz-index: 10;\nbox-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n    display:flex;\n    `;\n\nconst Item = styled.li`\n    width: 80px;\n    height: 50px;\n    text-align: center;\n    border-bottom: 3px solid \n    ${props => props.current ? \"#3498db\" : \"transparent\"};\n    transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    `;\n\nexport default withRouter(({ location: { pathname }}) => (\n    <Header>\n        <List>\n            <Item current={pathname === \"/\"}>\n                <SLink to=\"/\">Movies</SLink>\n            </Item>\n            <Item current={pathname === \"/tv\"}>\n                <SLink to=\"/tv\">TV</SLink>\n            </Item>\n            <Item current={pathname === \"/search\"}>\n                <SLink to=\"/search\">Search</SLink>\n            </Item>\n        </List>\n    </Header>\n)); ","import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport Massage from \"../../Components/Massage\";\nimport Poster from \"../../Components/Poster\";\nimport {Helmet} from \"react-helmet\";\n\nconst Container = styled.div`\n  padding:0px 20px\n  `;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width:100%;\n  `;\n\nconst Input = styled.input`\n  all:unset; \n  font-size:28px;\n  width:100%;\n  `;\n\nconst SearchPresenter = ({movieResults,\n                           tvResults,\n                           searchTerm,\n                           error,\n                           loading,\n                           handleSubmit,\n                           updateTerm}) =>\n  <Container>\n      <Helmet>\n        <title>Search | Nomflix</title>\n      </Helmet>\n  <Form onSubmit={handleSubmit}>\n    <Input placeholder=\"Search Movies od TV Shows....\" value={searchTerm} onChange={updateTerm}/>\n  </Form>\n  {loading ? <Loader/> : <>\n    {movieResults && movieResults.length > 0 && (\n      <Section title=\"Movie Results\">\n        {movieResults.map(movie => (\n          <Poster key={movie.id}\n                  id={movie.id}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  imageUrl={movie.poster_path}\n                  isMovie={true}\n                  year={movie.release_date && movie.release_date.substring(0,4)}\n          />        ))}\n      </Section>\n    )}\n\n    {tvResults && tvResults.length > 0 && (\n      <Section title=\"TV Show Results\">\n        {tvResults.map(show => (\n          <span key={show.id}>{show.name}</span>\n        ))}\n      </Section>\n    )}\n  </>}\n    {error && <Massage color=\"#e74c3c\" text={error}/>}\n    {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && (\n      <Massage color=\"#7f8c8d\" text=\"Nothing found\"/>\n      )}\n  </Container>;\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport {moviesApi} from \"../../api\";\nimport {tvApi} from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false\n  };\n\n  handleSubmit = (event) => { // 검색창에 검색 후 엔터를 누르면 searchTerm이 빈칸이 아닌것을 체크 후 search함수 실행\n    event.preventDefault();\n    const {searchTerm} = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (e) => {\n    const {target: {value}} = e;\n    this.setState({\n      searchTerm:value\n    })\n  };\n\n  searchByTerm = async () => {\n    const {searchTerm} = this.state;\n    this.setState({loading: true});\n    try {\n      // throw Massage()\n      const {data: {results: movieResults}} = await moviesApi.search(searchTerm);\n      const {data: {results: tvResults}} = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults\n      });\n    } catch {\n      this.setState({error: \"Can't find results.\"});\n    } finally {\n      this.setState({loading: false});\n    }\n  };\n\n  render() {\n    const {movieResults, tvResults, searchTerm, error, loading} = this.state;\n    // console.log(this.state)\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport Loader from \"../../Components/Loader\";\nimport {Helmet} from \"react-helmet\";\nimport Massage from \"../../Components/Massage\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity:0.5;\n  z-index:0\n  `;\n\nconst Content = styled.div`\n  display:flex;\n  width: 100%;\n  position:relative;\n  z-index:1;\n  height:100%;\n`;\n\nconst Cover = styled.div`\n  width:30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius:5px;\n\n  `;\n\nconst Date = styled.div`\n  width:70%;\n  margin-left:10px;\n`;\n\nconst  Title = styled.h3`\n  font-size:32px;\n  margin-bottom:10px;\n\n  `;\n\nconst ItemContainer = styled.div`\n  margin:20px 0;\n  `;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin:0 10px`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height:1.5;\n  width:50%;\n  `;\n\n\n\nconst DetailPresenter = ({result, error, loading}) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n    <Loader/>\n    </>) : (\n      error ? <Massage/> :     <Container>\n        <Helmet>\n          <title>{\n            result.original_title\n              ? result.original_title\n              : result.original_name} | Nomflix</title>\n        </Helmet>\n        <Backdrop\n          bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n        />\n        <Content>\n          <Cover bgImage={result.poster_path ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n            : require(\"../../assets/noPosterSmall.png\")}\n          />\n          <Date>\n            <Title>{\n              result.original_title\n                ? result.original_title\n                : result.original_name}\n            </Title>\n            <ItemContainer>\n              <Item>\n                {result.release_date\n                  ? result.release_date.substring(0,4)\n                  : result.first_air_date.substring(0,4)}\n              </Item>\n              <Divider> / </Divider>\n              <Item>{result.runtime ? result.runtime : result.episode_run_time[0]} min</Item>\n              <Divider> / </Divider>\n              <Item>\n                {result.genres && result.genres.map((genre,idx) => idx === result.genres.length -1 ? genre.name : `${genre.name}, ` )}\n              </Item>\n            </ItemContainer>\n            <Overview>{result.overview}</Overview>\n          </Date>\n        </Content>\n      </Container>\n\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default DetailPresenter;","import  DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport {moviesApi, tvApi} from \"../../api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {location: {pathname}} = props;\n\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n\n\n  async componentDidMount() {\n    const {match: {params: {id}}, history: {push}, location: {pathname}} = this.props;\n    const {isMovie} = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({data: result} = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({data: result} = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({error: \"Can't find anything.\"});\n    } finally {\n      this.setState({loading: false, result});\n    }\n  }\n\n  render() {\n    const {result, error, loading} = this.state;\n    return (\n      <DetailPresenter\n        result={result}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}","  import React from \"react\";\n  import { HashRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\n\n  import Home from \"../Routes/Home\";\n  import TV from \"../Routes/TV\";\n  import Header from \"./Header\";\n  import Search from \"../Routes/Search\";\n  import Detail from \"../Routes/Detail\";\n  \n\n  export default () => (\n      <Router>\n          <>\n          <Header />\n          <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/tv\" exact component={TV} />\n          <Route path=\"/search\"  component={Search} />\n          <Route path=\"/movie/:id\" component={Detail} />\n            <Route path=\"/show/:id\" component={Detail} />\n            <Redirect from=\"*\" to=\"/\" />\n            {/*이상한주소를 칠시홈으로돌아가기*/}\n          </Switch>\n          </>\n      </Router>\n  );","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n${reset};\na{\n    text-decoration:none;\n    color:inherit;\n}\n*{\n    box-sizing:border-box;\n}\nbody{\n    font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size:12px;\n    background-color:rgba(20,20,20,1);\n    color:white;\n    padding-top:50px;\n}\n`;\n\nexport default globalStyles;","import React, {Component} from 'react';\nimport Router from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\"\n\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router/>\n        <GlobalStyles/>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(< App /> , document.getElementById(\"root\"));\n"],"sourceRoot":""}